Important, low-level stuff:
It appears to currently be impossible to have the same note twice in a row for some reason.
Should row adding and removing be done at the end of the array, or at the cursor's current position?  (The end is probably fine; "insert at cursor position" only would mean you couldn't append after the last row.  It would be too confusing to users to implement both insert and append via a button-and-LED interface.)

Nice features:
There should be looping options: loop through current pattern forever; cycle through playing all (non-blank) patterns forever; cycle through playing all (non-blank) patterns once, then stop.  (Pattern loop, song loop, song one-shot.)
I need to improve the README file.
XML's beginning to look overkill again compared to plain text matrices, especially if we don't need a pattern sequence, we just keep copying them.
Make an ADSR envelope generator; use the attenuator with that instead.
Make a voltage controlled slew limiter module.  (Basically like the sequencer's slide and the delay module.)
Make a sample and hold module.
Make a voltage controlled delay / echo module.  (With a set sized array, cycled through at a voltage controlled speed, with a voltage controlled amount of feedback and a voltage controlled dry/wet mix.)
Have a go at making a chorus.  (I gather this is something like an extremely short delay with only one copy of the signal and a slightly variable speed.)

Distant dreams:
A multimode filter would be nice, but is probably beyond my abilities.
A realtime user interface version of the sequencer, that lets you edit rather than passively play notation, with load and save facilities and audio output (even if just sine waves and white noise) would be great, and pave the way for a hardware version of it.
A port of this written in C or C++ would be great.  It would not only be faster, but could be integrated with hardware via an Arduino board.
I need to think about whether the software modules should be part of the file format (so songs can include information about which modules are used, and how they're hooked up to the sequencer and each other), or not.  They might work as an extension to the main file format, but the main focus should be on the sequencer, and allowing it to be used with real world synthesisers, not tying it down to a software-only implementation.
Allow the user to change the tempo with each event row.  It works best as a 3-digit int, not as a bipolar control voltage, so it would make more sense to set it within the pattern, in a new kind of non-channel-specific column, than via CV in.
