Important, low-level stuff:
None.

Nice features:
I'm tempted to make the arbitrary CV values count from 00 to 50 instead of 00 to 99.  That way, making exact half (if not quarter) values is possible (although a range of 00 to 80 would accomplish that better), plus converting into volts is simply a matter of dividing by ten, or picturing a decimal point being there.  000 to 500 (or even 0000 to 5000) would be even better, as it would probably be precise enough to allow CV1 and CV2, if required, to output notes, at a pinch, as a hack.  It wouldn't be intuitive, but it would enable a triad chord to be played on each channel.  And, of course, minimum and maximum values lets you use CV1 and CV2 as event-row-length gates.
Make an ADSR envelope genrator; use the attenuator with that instead.
Make a voltage controlled slew limiter module.  (Basically like the sequencer's slide and the delay module.)
Make a sample and hold module.
Make a voltage controlled delay / echo module.  (With a set sized array, cycled through at a voltage controlled speed, with a voltage controlled amount of feedback and a voltage controlled dry/wet mix.)
Have a go at making a chorus.  (I gather this is something like an extremely short delay with only one copy of the signal and a slightly variable speed.)

Dreams:
A multimode filter would be nice, but is probably beyond my abilities.
A realtime user interface version of the sequencer, that lets you edit rather than passively play notation, with load and save facilities and audio output (even if just sine waves and white noise) would be great, and pave the way for a hardware version of it.
So would a port of this written in C.
